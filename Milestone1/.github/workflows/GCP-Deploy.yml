name: cloudrun-deploy
on:
  push:
    branches:
      - Flask-Sample # rename this to your prod branch if the naming differs
      - Flask-LoginReg
      - Flask-Calc-History-Continued
      - Flask-LoginReg-Video
      - Flask-Calc-History-And-Styles-Video
      - Flask-Calc-History-Updated-Video
jobs:

    deploy:
        name: Setup Gcloud Account
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: sample_app # change this to the directory your web app is in
        env:
          IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}
        steps:
        - name: Checkout repository
          uses: actions/checkout@v2
        - name: Run tests with pytest
          run: pip install -r requirements.txt && pytest
        - id: 'auth'
          uses: 'google-github-actions/auth@v0'
          with:
            credentials_json: ${{ secrets.GCP_CREDENTIALS }}

        - name: Configure Docker
          run: gcloud auth configure-docker --quiet

        - name: Build Docker image
          run: docker build . -t $IMAGE_NAME

        #- name: Test Docker image
        #  run: docker run $IMAGE_NAME sh -c "go test -v"
        # requires Google Container/Artifact Registry API Enabled
        - name: Push Docker image
          run: docker push $IMAGE_NAME

        # requires Google Cloud Run API enabled
        - name: Deploy Docker image
          run: gcloud run deploy ${{ secrets.GCP_PROJECT_ID }} --image $IMAGE_NAME --region us-central1 --platform managed --set-env-vars "DB_URL=${{secrets.DB_URL}},SECRET_KEY=${{secrets.SECRET_KEY}}"
        # we can pass our github secrets as environment variables during deploy
        #(note: this isn't the most secure way of doing this, but it's sufficient for our app)
